[project]
name = "azure-function-doctor"
version = "0.1.0"
description = "A diagnostic tool for Python Azure Functions"
authors = [{ name = "Yeongseon Choe", email = "yeongseon.choe@gmail.com" }]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "typer[all]",
    "rich",
    "requests",
]

[project.optional-dependencies]
dev = [
    "black",
    "build",
    "coverage",
    "hatch",
    "mkdocs",
    "mkdocs-material",
    "mypy",
    "pre-commit",
    "pytest",
    "ruff",
    "types-requests",
    "tox",
]

[project.scripts]
azfunc-doctor = "azure_functions_doctor.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.ruff]
line-length = 100
target-version = "py39"
exclude = [".venv", "build", "dist", "__pycache__"]
src = ["src"]
fix = true

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.ruff.isort]
known-first-party = ["azure_functions_doctor"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
namespace_packages = true
explicit_package_bases = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
branch = true
source = ["azure_functions_doctor"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.tox]
envlist = ["py39", "py310", "py311", "py312"]
skip_missing_interpreters = true

[tool.tox.testenv]
deps = ["pytest"]
commands = ["pytest", "tests"]